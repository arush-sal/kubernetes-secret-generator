name: Go

# Trigger the workflow on push or pull request
on:
  push:
    branches:
      - 'master'
    tags:
      - '*'
  pull_request:

env:
  KUBECONFIG: /tmp/kubeconfig
  IMAGE_NAME: arush/kubernetes-secret-generator

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - name: Install golangci-lint
        run: curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh| sh -s -- -b $(go env GOPATH)/bin v1.55.2

      - name: Run golangci-lint
        run: $(go env GOPATH)/bin/golangci-lint run -v --timeout 5m

      - name: Create kind cluster and apply crds
        run: make crd

      - name: Hack Code Climate and Go Modules
        if: github.event_name != 'pull_request'
        run: mkdir -p github.com/arush-sal && ln -sf $(pwd) github.com/arush-sal/kubernetes-secret-generator

      - name: Test & publish code coverage
        if: github.event_name != 'pull_request'
        uses: paambaati/codeclimate-action@v2.3.0
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.codeClimateReporterID }}
        with:
          coverageCommand: go test -coverprofile=c.out ./...
          debug: true
          prefix: 'github.com/${{ github.repository }}/'

      - name: Go Test
        if: github.event_name == 'pull_request'
        run: go test -coverprofile=c.out -coverpkg=./pkg/...  ./...

  build:
    name: Build Image
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        platform:
          - linux/amd64
          - linux/arm/v6
          - linux/arm/v7
          - linux/arm64
    needs: ['test']
    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        id: go

      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set cache name
        id: cache-name
        run: |
          echo 'cache-name=asterisk-cache-${{ matrix.platform }}' | sed 's:/:-:g' >> $GITHUB_OUTPUT

      - name: Build kubernetes-secret-generator
        run: go build -o build/_output/bin/kubernetes-secret-generator -ldflags -X=version.Version=${GITHUB_SHA::8} ./cmd/manager

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          file: ./build/Dockerfile
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=${{ env.IMAGE_NAME }},name-canonical=true

  deploymaster:
    name: Deploy Latest Image
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm/v6
          - linux/arm/v7
          - linux/arm64
    needs: ['test', 'build']
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        id: go

      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set cache name
        id: cache-name
        run: |
          echo 'cache-name=asterisk-cache-${{ matrix.platform }}' | sed 's:/:-:g' >> $GITHUB_OUTPUT

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.dockerLoginUsername }}
          password: ${{ secrets.dockerLoginPassword }}
          registry: quay.io

      - name: Build kubernetes-secret-generator
        run: go build -o build/_output/bin/kubernetes-secret-generator -ldflags -X=version.Version=${GITHUB_SHA::8} ./cmd/manager

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./build/Dockerfile
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=${{ env.IMAGE_NAME }},push-by-digest=true,name-canonical=true,push=true

  deploytagged:
    name: Deploy Tagged Image
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm/v6
          - linux/arm/v7
          - linux/arm64
    needs: ['test', 'build']
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        id: go

      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set cache name
        id: cache-name
        run: |
          echo 'cache-name=asterisk-cache-${{ matrix.platform }}' | sed 's:/:-:g' >> $GITHUB_OUTPUT

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.dockerLoginUsername }}
          password: ${{ secrets.dockerLoginPassword }}
          registry: quay.io

      - name: Build kubernetes-secret-generator
        run: go build -o build/_output/bin/kubernetes-secret-generator -ldflags -X=version.Version=${GITHUB_REF##*/} ./cmd/manager

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./build/Dockerfile
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=${{ env.IMAGE_NAME }},push-by-digest=true,name-canonical=true,push=true

  release:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
    needs: ['test', 'build']
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v3

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.6.0
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        with:
          charts_dir: "./deploy/helm-chart/kubernetes-secret-generator"
